// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WsPayBillsInfraestructure.Persistence;

#nullable disable

namespace WsPayBillsInfraestructure.Migrations
{
    [DbContext(typeof(WsPayBillContext))]
    [Migration("20230615185206_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WsPayBillsDomain.Bill", b =>
                {
                    b.Property<int>("bilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("bilId"));

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("bilContract")
                        .HasColumnType("int");

                    b.Property<string>("bilDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bilName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bilNumber")
                        .HasColumnType("int");

                    b.Property<float>("bilValuePay")
                        .HasColumnType("real");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("modifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("modifyUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("bilId");

                    b.HasIndex("State");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("WsPayBillsDomain.Document", b =>
                {
                    b.Property<int>("docId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("docId"));

                    b.Property<int>("bilId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("docUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("modifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("modifyUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("usrId")
                        .HasColumnType("int");

                    b.HasKey("docId");

                    b.HasIndex("bilId");

                    b.HasIndex("usrId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("WsPayBillsDomain.Enterprise", b =>
                {
                    b.Property<int>("entId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("entId"));

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("entName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("etyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("modifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("modifyUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("entId");

                    b.HasIndex("State");

                    b.HasIndex("etyId");

                    b.ToTable("Enterprises");
                });

            modelBuilder.Entity("WsPayBillsDomain.EnterpriseType", b =>
                {
                    b.Property<int>("etyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("etyId"));

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("etyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("modifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("modifyUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("etyId");

                    b.ToTable("EnterpriseTypes");
                });

            modelBuilder.Entity("WsPayBillsDomain.Rol", b =>
                {
                    b.Property<int>("rolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("rolId"));

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("modifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("modifyUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("rolId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("WsPayBillsDomain.State", b =>
                {
                    b.Property<int>("staId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("staId"));

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("modifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("modifyUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("staName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("staId");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("WsPayBillsDomain.Transaction", b =>
                {
                    b.Property<int>("trnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("trnId"));

                    b.Property<int>("bilId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("modifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("modifyUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("usrId")
                        .HasColumnType("int");

                    b.HasKey("trnId");

                    b.HasIndex("bilId");

                    b.HasIndex("usrId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("WsPayBillsDomain.User", b =>
                {
                    b.Property<int>("usrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("usrId"));

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("createUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("modifyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("modifyUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("rolId")
                        .HasColumnType("int");

                    b.Property<string>("usrAddres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usrCelPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usrEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usrLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usrName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("usrId");

                    b.HasIndex("rolId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WsPayBillsDomain.Bill", b =>
                {
                    b.HasOne("WsPayBillsDomain.State", "States")
                        .WithMany()
                        .HasForeignKey("State")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("States");
                });

            modelBuilder.Entity("WsPayBillsDomain.Document", b =>
                {
                    b.HasOne("WsPayBillsDomain.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("bilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WsPayBillsDomain.User", "User")
                        .WithMany()
                        .HasForeignKey("usrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WsPayBillsDomain.Enterprise", b =>
                {
                    b.HasOne("WsPayBillsDomain.State", "States")
                        .WithMany()
                        .HasForeignKey("State")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WsPayBillsDomain.EnterpriseType", "EnterpriseType")
                        .WithMany()
                        .HasForeignKey("etyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnterpriseType");

                    b.Navigation("States");
                });

            modelBuilder.Entity("WsPayBillsDomain.Transaction", b =>
                {
                    b.HasOne("WsPayBillsDomain.Bill", "Bill")
                        .WithMany()
                        .HasForeignKey("bilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WsPayBillsDomain.User", "User")
                        .WithMany()
                        .HasForeignKey("usrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WsPayBillsDomain.User", b =>
                {
                    b.HasOne("WsPayBillsDomain.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("rolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });
#pragma warning restore 612, 618
        }
    }
}
